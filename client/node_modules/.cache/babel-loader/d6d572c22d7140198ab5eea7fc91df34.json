{"ast":null,"code":"import _slicedToArray from \"/Users/Gotzil/Desktop/React/Assessment/client/students-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Gotzil/Desktop/React/Assessment/client/students-list/src/components/StudentsView.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport classes from './StudentsView.module.css';\n\nconst StudentsView = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        studentList = _useState2[0],\n        updateList = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        nationalities = _useState4[0],\n        updateNationalities = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        selectedNationality = _useState6[0],\n        updateSelectedNationality = _useState6[1];\n\n  useEffect(() => {\n    axios.get('http://localhost:8080/students').then(res => {\n      updateList(res.data);\n      let nationalities = Array.from(new Set(res.data.map(item => item.nationality))).sort((a, b) => {\n        return a.localeCompare(b);\n      });\n      updateNationalities(nationalities);\n      updateSelectedNationality(nationalities[0]);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const selectionChangedHandler = event => {\n    updateSelectedNationality(event.target.value);\n    console.log(selectedNationality, event.target.value);\n  };\n\n  let content = null;\n\n  if (!studentList.length) {\n    content = React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  } else {\n    content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: selectionChangedHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, nationalities.map((item, i) => React.createElement(\"option\", {\n      key: item + i,\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, item))), React.createElement(\"ul\", {\n      className: classes.ListContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, studentList.filter(item => item.nationality === selectedNationality).map(student => React.createElement(\"li\", {\n      className: classes.ListItem,\n      key: student._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"\".concat(student.firstName, \" \").concat(student.lastName, \" (\").concat(student.age, \")\")))), React.createElement(\"span\", {\n      className: classes.ButtonsContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: [classes.Button, classes.SortButton].join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Sort\"), React.createElement(\"button\", {\n      onClick: () => props.history.push('/new'),\n      className: [classes.Button, classes.AddButton].join(' '),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Add student\")));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.StudentsView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, content);\n};\n\nexport default StudentsView;\n\nconst Spinner = () => React.createElement(\"div\", {\n  className: classes.Spinner,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n});","map":{"version":3,"sources":["/Users/Gotzil/Desktop/React/Assessment/client/students-list/src/components/StudentsView.js"],"names":["React","useState","useEffect","axios","classes","StudentsView","props","studentList","updateList","nationalities","updateNationalities","selectedNationality","updateSelectedNationality","get","then","res","data","Array","from","Set","map","item","nationality","sort","a","b","localeCompare","catch","err","console","log","selectionChangedHandler","event","target","value","content","length","i","ListContainer","filter","student","ListItem","_id","firstName","lastName","age","ButtonsContainer","Button","SortButton","join","history","push","AddButton","Spinner"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nimport classes from './StudentsView.module.css';\n\nconst StudentsView = props => {\n    const [studentList, updateList] = useState([]);\n    const [nationalities, updateNationalities] = useState([]);\n    const [selectedNationality, updateSelectedNationality] = useState(null);\n    useEffect(() => {\n            axios.get('http://localhost:8080/students')\n                .then(res => {\n                    updateList(res.data);\n                    let nationalities = Array.from(new Set(res.data.map(item => item.nationality))).sort((a, b) => {\n                        return a.localeCompare(b);\n                    });\n                    updateNationalities(nationalities);\n                    updateSelectedNationality(nationalities[0]);\n                })\n                .catch(err => console.log(err));\n    }, []);\n\n    const selectionChangedHandler = event => {\n        updateSelectedNationality(event.target.value);\n        console.log(selectedNationality, event.target.value)\n    }\n    let content = null;\n    if (!studentList.length){\n        content = <Spinner />\n    } else {\n        content = (\n            <div>\n                <select onChange={selectionChangedHandler} >\n                    {nationalities.map((item, i) => <option key={item+i} value={item}>{item}</option>)}\n                </select>\n                <ul className={classes.ListContainer}>\n                    {studentList.filter(item => item.nationality === selectedNationality).map(student => (\n                        <li className={classes.ListItem} key={student._id}>{`${student.firstName} ${student.lastName} (${student.age})`}</li>\n                    ))}\n                </ul>\n                <span className={classes.ButtonsContainer}>\n                    <button className={[classes.Button, classes.SortButton].join(' ')}>Sort</button>\n                    <button onClick={() => props.history.push('/new')} className={[classes.Button, classes.AddButton].join(' ')}>Add student</button>\n                </span>\n            </div>\n        )\n    }\n    return (\n        <div className={classes.StudentsView}>\n            {content}\n        </div>\n    )\n}\n\nexport default StudentsView;\n\nconst Spinner = () => (\n    <div className={classes.Spinner}></div>\n)"]},"metadata":{},"sourceType":"module"}