{"ast":null,"code":"import _objectSpread from \"/Users/Gotzil/Desktop/React/Assessment/client/students-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/Gotzil/Desktop/React/Assessment/client/students-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Gotzil/Desktop/React/Assessment/client/students-list/src/components/AddStudent.js\";\nimport React, { useState, useEffect } from 'react';\nimport classes from './AddStudent.module.css';\n\nconst AddStudent = props => {\n  const _useState = useState({\n    id: {\n      type: 'number',\n      label: 'Student Id',\n      value: ''\n    },\n    firstName: {\n      type: 'text',\n      label: 'First name',\n      value: ''\n    },\n    lastName: {\n      type: 'text',\n      label: 'Last name',\n      value: ''\n    },\n    age: {\n      type: 'number',\n      label: 'Student\\'s age',\n      value: ''\n    },\n    nationality: {\n      type: 'text',\n      label: 'Student\\'s nationality',\n      value: ''\n    }\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        updateData = _useState2[1];\n\n  const inputChangedHandler = (event, identifier) => {\n    updateData(_objectSpread({}, data, {\n      [identifier]: _objectSpread({}, data[identifier], {\n        value: event.target.value\n      })\n    }));\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    let inputData = {};\n\n    for (let key in data) {\n      inputData[key] = data[key].value;\n    }\n\n    console.log(inputData);\n  };\n\n  let formInput = [];\n\n  for (let key in data) {\n    formInput.push({\n      name: key,\n      data: data[key]\n    });\n  }\n\n  let form = formInput.map(item => React.createElement(Input, {\n    key: item.name,\n    type: item.data.type,\n    value: item.data.value,\n    label: item.data.label,\n    name: item.name,\n    onChange: event => inputChangedHandler(event, item.name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n  return React.createElement(\"form\", {\n    className: classes.AddStudent,\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Add a new student\"), form, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: classes.Button,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Add student\"));\n};\n\nexport default AddStudent;\n\nconst Input = ({\n  type,\n  label,\n  value,\n  name,\n  onChange\n}) => React.createElement(\"input\", {\n  type: type,\n  label: label,\n  value: value,\n  onChange: onChange,\n  name: name,\n  className: classes.Input,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n});","map":{"version":3,"sources":["/Users/Gotzil/Desktop/React/Assessment/client/students-list/src/components/AddStudent.js"],"names":["React","useState","useEffect","classes","AddStudent","props","id","type","label","value","firstName","lastName","age","nationality","data","updateData","inputChangedHandler","event","identifier","target","onSubmit","preventDefault","inputData","key","console","log","formInput","push","name","form","map","item","Button","Input","onChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classes from './AddStudent.module.css';\n\nconst AddStudent = props => {\n\n    const [data, updateData] = useState({\n        id: {\n            type: 'number',\n            label: 'Student Id',\n            value: ''\n        },\n        firstName: {\n            type: 'text',\n            label: 'First name',\n            value: ''\n        },\n        lastName: {\n            type: 'text',\n            label: 'Last name',\n            value: ''\n        },\n        age: {\n            type: 'number',\n            label: 'Student\\'s age',\n            value: ''\n        },\n        nationality: {\n            type: 'text',\n            label: 'Student\\'s nationality',\n            value: ''\n        },\n    });\n    const inputChangedHandler = (event, identifier) => {\n        updateData({\n            ...data, \n            [identifier]: {\n                ...data[identifier], \n                value: event.target.value\n            }\n        });\n    }\n    const onSubmit = event => {\n        event.preventDefault();\n        let inputData = {};\n        for (let key in data){\n            inputData[key]= data[key].value   \n        }\n        console.log(inputData);\n    }\n    let formInput = [];\n    for (let key in data){\n        formInput.push({\n            name: key,\n            data: data[key]\n        })\n    }\n    let form = formInput.map(item => (\n        <Input key={item.name}\n        type={item.data.type} \n        value={item.data.value} \n        label={item.data.label}\n        name={item.name}\n        onChange={(event) => inputChangedHandler(event, item.name)}\n        />\n    )) \n    return (\n        <form className={classes.AddStudent} onSubmit={onSubmit}>\n            <h1>Add a new student</h1>\n            {form}\n            <br />\n            <button className={classes.Button} type='submit'>Add student</button>\n        </form>\n    )\n}\nexport default AddStudent;\n\nconst Input = ({\n    type,\n    label,\n    value,\n    name,\n    onChange\n}) => (\n    <input type={type}\n    label={label}\n    value={value}\n    onChange={onChange}\n    name={name}\n    className={classes.Input}\n    />\n)"]},"metadata":{},"sourceType":"module"}