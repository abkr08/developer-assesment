{"ast":null,"code":"import _slicedToArray from \"/Users/Gotzil/Desktop/React/Assessment/client/students-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Gotzil/Desktop/React/Assessment/client/students-list/src/components/AddStudent.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst AddStudent = props => {\n  const _useState = useState([{\n    name: 'id',\n    type: 'number',\n    placeholder: 'Enter Id',\n    value: ''\n  }, {\n    name: 'firstName',\n    type: 'text',\n    placeholder: 'Enter first name',\n    value: ''\n  }, {\n    name: 'lastName',\n    type: 'text',\n    placeholder: 'Enter last name',\n    value: ''\n  }, {\n    name: 'age',\n    type: 'number',\n    placeholder: 'Enter your age',\n    value: ''\n  }, {\n    name: 'nationality',\n    type: 'text',\n    placeholder: 'Enter your nationality',\n    value: ''\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        updateData = _useState2[1];\n\n  const inputChangedHandler = (event, identifier) => {\n    console.log(event.target.value, identifier);\n  };\n\n  let form = data.map(item => React.createElement(Input, {\n    key: item.name,\n    type: item.type,\n    value: item.value,\n    placeholder: item.placeholder,\n    name: item.name,\n    onChange: event => inputChangedHandler(event, item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n  return form;\n};\n\nexport default AddStudent;\n\nconst Input = ({\n  type,\n  placeholder,\n  value,\n  name,\n  onChange\n}) => React.createElement(\"input\", {\n  type: type,\n  placeholder: placeholder,\n  value: value,\n  onChange: onChange,\n  name: name,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n});","map":{"version":3,"sources":["/Users/Gotzil/Desktop/React/Assessment/client/students-list/src/components/AddStudent.js"],"names":["React","useState","useEffect","AddStudent","props","name","type","placeholder","value","data","updateData","inputChangedHandler","event","identifier","console","log","target","form","map","item","Input","onChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA,oBAEGH,QAAQ,CAAC,CAChC;AACII,IAAAA,IAAI,EAAE,IADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,WAAW,EAAE,UAHjB;AAIIC,IAAAA,KAAK,EAAE;AAJX,GADgC,EAOhC;AACIH,IAAAA,IAAI,EAAE,WADV;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,WAAW,EAAE,kBAHjB;AAIIC,IAAAA,KAAK,EAAE;AAJX,GAPgC,EAahC;AACIH,IAAAA,IAAI,EAAE,UADV;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,WAAW,EAAE,iBAHjB;AAIIC,IAAAA,KAAK,EAAE;AAJX,GAbgC,EAmBhC;AACIH,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,IAAI,EAAE,QAFV;AAGIC,IAAAA,WAAW,EAAE,gBAHjB;AAIIC,IAAAA,KAAK,EAAE;AAJX,GAnBgC,EAyBhC;AACIH,IAAAA,IAAI,EAAE,aADV;AAEIC,IAAAA,IAAI,EAAE,MAFV;AAGIC,IAAAA,WAAW,EAAE,wBAHjB;AAIIC,IAAAA,KAAK,EAAE;AAJX,GAzBgC,CAAD,CAFX;AAAA;AAAA,QAEjBC,IAFiB;AAAA,QAEXC,UAFW;;AAkCxB,QAAMC,mBAAmB,GAAG,CAACC,KAAD,EAAQC,UAAR,KAAuB;AAC/CC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,MAAN,CAAaR,KAAzB,EAAgCK,UAAhC;AACH,GAFD;;AAGA,MAAII,IAAI,GAAGR,IAAI,CAACS,GAAL,CAASC,IAAI,IACpB,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,IAAI,CAACd,IAAjB;AACA,IAAA,IAAI,EAAEc,IAAI,CAACb,IADX;AAEA,IAAA,KAAK,EAAEa,IAAI,CAACX,KAFZ;AAGA,IAAA,WAAW,EAAEW,IAAI,CAACZ,WAHlB;AAIA,IAAA,IAAI,EAAEY,IAAI,CAACd,IAJX;AAKA,IAAA,QAAQ,EAAGO,KAAD,IAAWD,mBAAmB,CAACC,KAAD,EAAQO,IAAR,CALxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,CAAX;AASA,SAAOF,IAAP;AACH,CA/CD;;AAgDA,eAAed,UAAf;;AAEA,MAAMiB,KAAK,GAAG,CAAC;AACXd,EAAAA,IADW;AAEXC,EAAAA,WAFW;AAGXC,EAAAA,KAHW;AAIXH,EAAAA,IAJW;AAKXgB,EAAAA;AALW,CAAD,KAOV;AAAO,EAAA,IAAI,EAAEf,IAAb;AACA,EAAA,WAAW,EAAEC,WADb;AAEA,EAAA,KAAK,EAAEC,KAFP;AAGA,EAAA,QAAQ,EAAEa,QAHV;AAIA,EAAA,IAAI,EAAEhB,IAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPJ","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst AddStudent = props => {\n\n    const [data, updateData] = useState([\n        {\n            name: 'id',\n            type: 'number',\n            placeholder: 'Enter Id',\n            value: ''\n        },\n        {   \n            name: 'firstName',\n            type: 'text',\n            placeholder: 'Enter first name',\n            value: ''\n        },\n        {   \n            name: 'lastName',\n            type: 'text',\n            placeholder: 'Enter last name',\n            value: ''\n        },\n        {   \n            name: 'age',\n            type: 'number',\n            placeholder: 'Enter your age',\n            value: ''\n        },\n        {   \n            name: 'nationality',\n            type: 'text',\n            placeholder: 'Enter your nationality',\n            value: ''\n        },\n    ]);\n    const inputChangedHandler = (event, identifier) => {\n        console.log(event.target.value, identifier)\n    }\n    let form = data.map(item => (\n        <Input key={item.name}\n        type={item.type} \n        value={item.value} \n        placeholder={item.placeholder}\n        name={item.name}\n        onChange={(event) => inputChangedHandler(event, item)}\n        />\n    )) \n    return form;\n}\nexport default AddStudent;\n\nconst Input = ({\n    type,\n    placeholder,\n    value,\n    name,\n    onChange\n}) => (\n    <input type={type}\n    placeholder={placeholder}\n    value={value}\n    onChange={onChange}\n    name={name}\n    />\n)"]},"metadata":{},"sourceType":"module"}